q()
q()
q()
install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
mySqrt<-sqrt(z-1)
mySqrt
myDiv<-z/mySqrt
myDiv
c(1,2,3,4)+c(0,10)
c(1,2,3,4) + c(0,10,100)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10, by 0.5)
seq(0,10, by=0.5)
my_seq<-seq(5,10,length=30)
length(my_seq)
seq(1:length(my_seq)
)
seq(1,length(my_seq))
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect >= 6
my_char("My","name","is")
my_char<-c("My","name","is")
my_char
paste(my_char, collapse=" ")
my_name<- c(my_char,"Jyothi")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep="")
paste("Hello", "world!", sep=" ")
paste(c(1:3),c("X","Y","Z"), sep="")
paste(1:3,c("X","Y","Z"), sep="")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
myData <- sample(c(y,z),100)
myNA<- is.na()
myNA<- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
c(1:5, inc=2)
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("fpp","bar")]
vect[c("foo","bar")]
myVector<-c(1:20)
c(1:20)
myVector <- c(1:20)
myVector<-1:20
myVector
dim(myVector)
length(myVector)
dim(myVector)<-c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix<-myVector
?matrix
myMatrix2<-matrix(1:20,nrow=4,ncol=5)
identical(myMatrix,myMatrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,myMatrix)
myData <- data.frame(patients,myMatrix)
myData
class(myData)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(myData)<-cnames
myData
getwd()
bye
quit
q()
x <- 1:10
if(x > 5) {
x <- 0
}
if(x > 5) {
x<-0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
h
h()
h(3)
q()
getwd()
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean(getwd(), "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean( "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean(getwd(), "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean(getwd(), "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean(getwd(), "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean(getwd(), "sulfate", 1:10)
pollutantmean(getwd(), "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean(getwd(), "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean(getwd(), "nitrate", 70:72)
pollutantmean(getwd(), "nitrate", 23)
?lapply
source("pollutantmean.R")
pollutantmean(getwd(), "nitrate", 23)
library(swirl)
swirl()
pollutantmean(getwd(), "nitrate", 23)
source("pollutantmean.R")
pollutantmean(getwd(), "nitrate", 23)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
1
2
3
4
submit
submit()
1
2
3
4
5
submit()
2
submit()
submit()
submit()
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 3)
compdf <- complete()
row.names(compdf) <- 1:NROW(compdf)
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", 1)
source("complete.R")
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
x<-read.csv("001.csv")
typeof(x)
is.data.frame(x)
tt<-na.omit(dat)
tt<-na.omit(x)
head(tt)
dim(tt)
data.frame(id=sprintf('%03d', id),
countrows=sapply(csvfiles,function(x) length(count.fields(x))),
row.names=id
)
colnames(tt)[ID]<-"id"
colnames(tt)[4]<-"id"
tt
head(tt)
ff<-data.frame(id=1,nobs(tt))
ff<-data.frame(id=1,length(tt))
ff
ff<-data.frame(id=1,countrows=sapply(tt,function(x) length(count.fields(x)))
)
ff<-data.frame(id=1,countrows=lapply(tt,function(x) length(count.fields(x))))
data.frame(id=1, countrows=sapply(tt,function(x) length(count.fields(x))))
data.frame(id=1, countrows=nrows(tt))
data.frame(id=1, countrows=nrow(tt))
source("complete.R")
complete("specdata", 1)
source("complete.R")
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
nobs
source("complete.R")
complete("specdata", 1)
dataFrame<-NULL
for(i in id){
df<-sprintf("C:/Jyothi/DataScience/R Programming/Assignment/%s/%03d.csv", directory, id)
readFile<-read.csv(df)
tt<-na.omit(readFile)
nobs<-nrow(tt)  #this is strong-coupled on the data frame format of all the monitors
nobs
}
nobs<-nrow(tt)  #this is strong-coupled on the data frame format of all the monitors dataFrame<-NULL
for(i in 1){
df<-sprintf("C:/Jyothi/DataScience/R Programming/Assignment/%s/%03d.csv", directory, id)
readFile<-read.csv(df)
tt<-na.omit(readFile)
nobs<-nrow(tt)  #this is strong-coupled on the data frame format of all the monitors
nobs
}
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
submit()
6
submit()
submit()
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
cr <- corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
submit()
submit()
submit()
submit()
summary(cr)
cr <- corr("specdata", 400)
head(cr)
submit()
source("corr.R")
submit()
source("corr.R")
source("corr.R")
source("corr.R")
source("corr.R")
source("corr.R")
source("complete.R")
submit()
source("corr.R")
source("complete.R")
submit()
source("corr.R")
source("complete.R")
submit()
source("corr.R")
submit()
q()
getwd()
source("cachematrix.R")
a<-makeCacheMatrix()
a$set(matrix(1:4,2,2)
)
a
cacheSolve(a)
a$set(matrix(1:4,2,2)
)
a$get()
cacheSolve(a)
?solve
cacheSolve(a)
a<-makeCacheMatrix()
a$set(matrix(1:6,2,2)
)
cacheSolve(a)
source("cachematrix.R")
a<-makeCacheMatrix()
a$set(matrix(1:6,2,2)
)
cacheSolve(a)
q()
